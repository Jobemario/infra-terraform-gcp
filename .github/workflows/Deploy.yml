name: Deploy

on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'Deployment directory'
        required: true

jobs:
  Deploy-Dev:
    if: github.ref == 'refs/heads/dev' && inputs.dir != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c贸digo
        uses: actions/checkout@v3

      - name: Setup Terragrunt
        uses: hashicorp/setup-terragrunt@v2
        with:
          terraform_version: 1.7.5

      - name: Configurar GCP Dev
        run: |
          echo "${{ secrets.GCP_DEV_CREDENTIALS }}" > gcp.json
          export GOOGLE_CREDENTIALS=$(cat gcp.json)

      - name: Terragrunt Init
        working-directory: ${{ inputs.dir }}
        run: terragrunt init

      - name: Terragrunt Apply
        working-directory: ${{ inputs.dir }}
        run: terragrunt apply -auto-approve

      - name: Notify Slack (Deploy Dev)
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: '#terraform-notifications'
          text: "Deploy DEV finalizado para diret贸rio `${{ inputs.dir }}`"

  Deploy-Prod:
    if: github.ref == 'refs/heads/prod' && inputs.dir != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c贸digo
        uses: actions/checkout@v3

      - name: Setup Terragrunt
        uses: hashicorp/setup-terragrunt@v2
        with:
          terraform_version: 1.7.5

      - name: Configurar GCP Prod
        run: |
          echo "${{ secrets.GCP_PROD_CREDENTIALS }}" > gcp.json
          export GOOGLE_CREDENTIALS=$(cat gcp.json)

      - name: Terragrunt Init
        working-directory: ${{ inputs.dir }}
        run: terragrunt init

      - name: Terragrunt Apply
        working-directory: ${{ inputs.dir }}
        run: terragrunt apply -auto-approve

      - name: Notify Slack (Deploy Prod)
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: '#terraform-notifications'
          text: "Deploy PROD finalizado para diret贸rio `${{ inputs.dir }}`"
